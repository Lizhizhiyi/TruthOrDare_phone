const truthQuestions = [
    "上次接吻是什么时候？",
    "上次接吻是和谁？",
    "暗恋过几个异性？",
    "有主动追求过别人吗？",
    "有被别人追求过吗？",
    "现在心里最在意的异性名字？",
    "初恋是什么时候？",
    "初恋对方现在过得怎么样？",
    "初恋如果再给你一次机会，还会珍惜吗？",
    "最喜欢吃的食物？",
    "最讨厌的食物是什么？",
    "不为人知的小癖好？",
    "最喜欢的明星是谁？",
    "最讨厌的明星是谁？",
    "自己想当明星吗？",
    "当异性因为分手找你求安慰你会怎么做？",
    "父母对家孩子你怎么排序？",
    "送礼物会送内衣吗？",
    "你认为情侣一天都不联系对方正常吗？",
    "你对另一半有什么要求和底线？",
    "每天醒来后第一个想起的人是谁？",
    "发生过最尴尬的事情是什么？",
    "见过别人最尴尬的事情是什么？",
    "做过最无聊的事情是什么？",
    "无聊的时候想干什么？",
    "会经常便秘吗？",
    "干过最廉价的事情？",
    "上次哭是什么时候？",
    "最想哭的事情是什么？",
    "买过最贵的东西是多少钱？",
    "最贵的鞋子是多少钱？",
    "最贵的包包多少钱？",
    "身上有胎记吗？长在什么地方？什么形状的？",
    "理想中的另一半是什么样子的？",
    "择偶的标准是什么？",
    "被甩过多少次？",
    "甩过别人多少次？",
    "甩别人的感觉是怎么样的？",
    "有过空虚寂寞冷的时候吗？",
    "会做什么事情来缓解空虚寂寞冷？",
    "分享下你的恋爱史？",
    "酒量如何，喝醉了会做什么事情？",
    "你对另一半的要求有哪些？",
    "初恋是在什么情景下发生的？",
    "男人善变还是女人善变？",
    "男人的话可信还是女人的话可信？",
    "如果可以选择，你会选做异性吗？",
    "如果做异性后，最想干的事情是什么？",
    "自己拥有的最贵的东西是什么？",
    "自己最不想要的又是什么？",
    "男女之间存在友谊吗？",
    "分手后还会继续约吗？",
    "一个月开销多少钱？",
    "平时开销花在什么地方的最多？",
    "钱包里会放照片吗？是谁的？",
    "会不会向暗恋的人表白？通常会怎么样表白？",
    "做过最浪漫的事情是什么？",
    "想给别人怎么样的浪漫？",
    "男的是不是天生应该赚钱养家？",
    "喜欢平胸的女生还是胸大的女生？",
    "你会因为为什么小题大做？",
    "喜欢别人对你做什么小动作？",
    "讨厌别人对你做什么动作？",
    "“我爱你”这三个字，你相信吗？",
    "什么样的女人叫有女人味？",
    "什么样的男人叫有男人味？",
    "接受姐弟恋嘛？",
    "接受对方出轨吗？",
    "是否接受开放式婚姻？",
    "思想出轨和肉体出轨，哪个更容易接受？",
    "什么样的分手方式最怪？",
    "你会选择什么方式跟对方分手？",
    "你喜欢爱一个人，还是被一个人爱？",
    "如果给你一千元，你想怎么花？",
    "你觉得分手后还能当朋友吗？",
    "在你心中谁最可靠？",
    "你在感情上劈过腿没有？",
    "和异性发生过暧昧的事情",
    "你对喜欢的异性有什么感觉？",
    "你上次吵架最伤心是什么时候？",
    "跟你喜欢的人约会碰到前任，会有什么反应？",
    "情人节最想收到什么礼物？",
    "有没有钟意的人？",
    "你觉得哪位异性的嘴唇看起来最想Kiss？",
    "有没有幻想过和你喜欢的人做哪些事？",
    "你觉得你曾经喜欢的人现在还喜欢吗？",
    "如果有来生你选择当什么？",
    "现在你眼里是什么样？",
    "你最关心的异性是谁？",
    "如果时间能倒流你希望回到哪一时间？",
    "如果突然有异性说爱上了你，你怎么办？",
    "如果时间能倒流，你喜欢回到哪一时段？",
    "跟异性做过最亲密的事是什么？",
    "洗澡洗到一半没水了怎么办？",
    "你会不会在意 ta 的过去？",
    "你会为了众人的反对放弃自己想要的人吗？",
    "你希望另一半哪个部位最好看？",
    "你对自身的哪个部位最满意？",
    "你心情不好的时候干嘛？",
    "如果前任要求复合，你会怎么办？"
];

const dareChallenges = [
    "深情的吻墙10秒",
    "模仿洪世贤，说一句你好骚啊",
    "在微信搜索“性感”，读显示的第一条信息",
    "去商店里问老板有蚊帐卖吗？",
    "拿吃的到饭店找一对情侣，在他们面前吃一会",
    "去厕所门口对进去的人说:欢迎用餐",
    "给微信第一个聊天框的人打电话说:我想你",
    "做一个大家都被熏的鬼脸",
    "说出数字一至十开头的成语",
    "给大家唱一首对于你来说有特殊意义的歌",
    "扮演四个猫，从门走进来",
    "亲吻左手背三秒",
    "模仿某人的语气:哥哥是在嘛妹妹吗？",
    "把抖音/快手的喜欢列表截图发出来",
    "闻袜子30秒,并说真香",
    "把你的相册截图发出来",
    "做一个自认为最帅的动作",
    "跳社会摇，花1分钟",
    "模仿美少女战士水月",
    "模仿喝一杯烈酒的样子喝一杯白开水",
    "对在场的一位异性说—分钟情话",
    "先大笑5秒,再大哭5秒，反复2-3次",
    "用异性的声音唱一首大家都熟悉的歌",
    "和身旁第一个异性换穿上衣",
    "选择1人与其鼻尖对鼻尖",
    "给最近的人擦嘴巴",
    "用三种方式和椅子吵架",
    "门牙涂黑，像笑30秒",
    "用脚涂口红",
    "口熏鸡破套服睛或嘴巴",
    "去其他桌借筷饭蟹分",
    "蹲着绕椅子周围走十圈",
    "打开抖音,模仿推荐的第一个",
    "蹲桌子下面唱一杯酒",
    "把手放在一位异性脸上",
    "拿鞋唱歌或者喊麦",
    "与一位异性十指相扣十分钟",
    "《青藏高原》最后一句深情演唱",
    "右手跨过右脑勺从左边摸右眼",
    "坐你左边的人的大腿上",
    "脱下自己的袜子深呼吸",
    "身体扭动字母或者夹鸡蛋给你酌酒",
    "嘴里含一口水说come的喂ABC",
    "从现在开始你每句话都要用撒娇语气",
    "模仿宋小宝海燕你可长点心吧",
    "找一名异性对亲脖子",
    "做3个鬼脸并发朋友圈",
    "大喊我是你强哥",
    "30秒唱完一瓶啤酒",
    "去别的桌前跳一支舞",
    "抱着正对面的人的大腿唱情歌",
    "打电话给前任，说想他了",
    "现场邀请一位异性唱歌",
    "学习超模现场走秀或者吻一圈",
    "摆出自认为的三个性感动作",
    "现场打开微信的朋友圈两分钟",
    "抱着你右侧的人打电话说:我想你",
    "做一个大家都满意的鬼脸",
    "用屁股在空中写出自己的名字",
    "现场脱下一件衣服，坚持半小时",
    "随便抓个人说，我怀了你的孩子",
    "亲现场在你左手边第二个人的额头",
    "抱着身边的椅子大冒险的结束",
    "对异性服务员说:请给我的微笑打包",
    "用笔在和头上画一个乌龟直到游戏结束",
    "用手纸围巾，围脖子上持续一轮游戏",
    "吃完每个人给你夹的菜或者夹鸡蛋",
    "去隔壁桌收空瓶子，下次输了再还回去",
    "站在凳子上说:憨与登基了！",
    "说自己的内裤是红色的",
    "啄个一字马",
    "跳一段钢管舞",
    "帮一个异性穿衣服",
    "问服务员有后悔药卖吗？",
    "不用手喝饮料",
    "给最近的人擦嘴巴",
    "家乡话表演大话西游的经典",
    "模仿白蛇传",
    "打开淘宝购物清单",
    "拍一张挖鼻孔照片发朋友圈求点赞",
    "对陌生人挤眉弄眼介绍两分钟",
    "抱着你右侧的人打电话说:我想你",
    "跳一段乱舞，有音乐配合最好",
    "做一个瑜伽动作",
    "喝一下你的手机壁纸",
    "抱住照片或者喊麦",
    "亲手在你左手边第二个人的额头",
    "表演偶像的舞蹈",
    "给最近的人擦鞋",
    "给饭馆服务员说:请给我微笑打包",
    "抱着你右侧的人打电话说:我想你",
    "蹲着扭动字母或者夹鸡蛋给你酌酒",
    "嘴里含一口水说come的喂ABC",
    "从现在开始你每句话都要用撒娇语气",
    "模仿宋小宝海燕你可长点心吧",
    "找一名异性对亲脖子",
    "做3个鬼脸并发朋友圈",
    "大喊我是你强哥",
    "30秒喝完一瓶啤酒",
    "去拍一个人的屁股"
];

const contentDisplay = document.getElementById('contentDisplay');
const truthTitle = document.getElementById('truthTitle');
const dareTitle = document.getElementById('dareTitle');
const orTitle = document.getElementById('orTitle');
// 移除背景闪电

function getRandomItem(array) {
    return array[Math.floor(Math.random() * array.length)];
}

function displayContent(content, mode) {
    // 移除之前的模式类
    contentDisplay.classList.remove('truth-mode', 'dare-mode');
    
    // 添加新的模式类
    contentDisplay.classList.add(mode);
    
    // 先清空
    contentDisplay.innerHTML = '';

    // 将文本拆成字符，分别做“闪电”式亮灭
    const p = document.createElement('p');
    p.className = 'content-text lightning-text';
    const chars = content.split('');
    chars.forEach((ch, i) => {
        const span = document.createElement('span');
        span.className = 'bolt';
        span.textContent = ch;
        // 随机抖动延迟，造成不规则电流效果
        const delay = 30 * i + Math.floor(Math.random() * 60);
        span.style.animationDelay = `${delay}ms`;
        p.appendChild(span);
    });
    contentDisplay.appendChild(p);
}

truthTitle.addEventListener('click', () => {
    const question = getRandomItem(truthQuestions);
    displayContent(question, 'truth-mode');
    flickerTitle(truthTitle);
});

dareTitle.addEventListener('click', () => {
    const challenge = getRandomItem(dareChallenges);
    displayContent(challenge, 'dare-mode');
    flickerTitle(dareTitle);
});

// 背景闪电相关逻辑已移除

orTitle.addEventListener('click', () => {
    const isTruth = Math.random() < 0.5;
    if (isTruth) {
        const question = getRandomItem(truthQuestions);
        displayContent(question, 'truth-mode');
    } else {
        const challenge = getRandomItem(dareChallenges);
        displayContent(challenge, 'dare-mode');
    }
}); 

// 让标题偶发闪动
function flickerTitle(el) {
    if (!el) return;
    el.classList.remove('title-flicker');
    void el.offsetWidth; // 重新触发动画
    el.classList.add('title-flicker');
}

// 间歇性随机闪动（不影响点击）
function autoFlickerAll() {
    [truthTitle, orTitle, dareTitle].forEach((el) => flickerTitle(el));
    const next = Math.random() * 2000 + 3000; // 3s ~ 5s
    setTimeout(autoFlickerAll, next);
}
setTimeout(autoFlickerAll, 2000);